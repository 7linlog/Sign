name: test
on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * *"
    - cron: "0 18 * * *"

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          
      - name: 安装依赖
        run: pip install -r requirements.txt

      - name: 输出 Secrets 内容进行调试
        run: |
          echo "Secrets 内容如下："
          echo "$TEST_SECRET" || echo "Secrets 内容为空！"
        env:
          TEST_SECRET: ${{ secrets.CONFIG_JSON }}

      - name: 写入 Secrets 到 config.json
        env:
          TEST_SECRET: ${{ secrets.CONFIG_JSON }}
        run: |
          mkdir -p user
          echo "$TEST_SECRET" > user/config.json
          echo "写入完成。"

      - name: 验证文件是否正确写入
        run: |
          if [ -s user/config.json ]; then
            echo "Secrets 文件已成功写入，大小为：$(stat -c%s user/config.json) 字节"
          else
            echo "Secrets 文件为空或写入失败！"
            exit 1
          fi

      - name: 验证 config.json 内容
        run: |
          echo "config.json 文件内容如下："
          cat -A user/config.json || echo "文件不存在或内容为空！"
          echo "字符总数为：$(wc -c < user/config.json)"

      - name: 安装 jq 工具
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: 验证 JSON 格式
        run: |
          if jq empty user/config.json; then
            echo "Secrets 文件包含有效的 JSON 内容！"
          else
            echo "Secrets 文件的 JSON 格式无效！"
          fi

      - name: 验证文件大小
        run: |
          if [ -s user/config.json ]; then
            echo "Secrets 文件已写入，大小为：$(stat -c%s user/config.json) 字节"
          else
            echo "Secrets 文件为空或未正确写入！"
          fi

      - name: 查看文件内容
        run: |
          echo "config.json 文件内容如下："
          cat user/config.json || echo "文件不存在或内容为空！"

      - name: 执行签到脚本
        run: python main.py
